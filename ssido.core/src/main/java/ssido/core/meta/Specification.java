// Generated by delombok at Tue Sep 03 11:12:20 CEST 2019
// Copyright (c) 2018, Yubico AB
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
package ssido.core.meta;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import ssido.util.json.LocalDateJsonSerializer;
import java.net.URL;
import java.time.LocalDate;

/**
 * Reference to a particular version of a specification document.
 */
public final class Specification {
    /**
     * Address to this version of the specification.
     */
    private final URL url;
    /**
     * Address to the latest version of this specification.
     */
    private final URL latestVersionUrl;
    /**
     * An object indicating the status of the specification document.
     */
    private final DocumentStatus status;
    /**
     * The release date of the specification document.
     */
    @JsonSerialize(using = LocalDateJsonSerializer.class)
    private final LocalDate releaseDate;

    static SpecificationBuilder builder() {
        return new SpecificationBuilder();
    }


    static class SpecificationBuilder {
        private URL url;
        private URL latestVersionUrl;
        private DocumentStatus status;
        private LocalDate releaseDate;

        SpecificationBuilder() {
        }

        /**
         * Address to this version of the specification.
         */
        public SpecificationBuilder url(final URL url) {
            this.url = url;
            return this;
        }

        /**
         * Address to the latest version of this specification.
         */
        public SpecificationBuilder latestVersionUrl(final URL latestVersionUrl) {
            this.latestVersionUrl = latestVersionUrl;
            return this;
        }

        /**
         * An object indicating the status of the specification document.
         */
        public SpecificationBuilder status(final DocumentStatus status) {
            this.status = status;
            return this;
        }

        /**
         * The release date of the specification document.
         */
        public SpecificationBuilder releaseDate(final LocalDate releaseDate) {
            this.releaseDate = releaseDate;
            return this;
        }

        public Specification build() {
            return new Specification(url, latestVersionUrl, status, releaseDate);
        }
    }

    /**
     * Address to this version of the specification.
     * @return 
     */
    public URL getUrl() {
        return this.url;
    }

    /**
     * Address to the latest version of this specification.
     * @return 
     */
    public URL getLatestVersionUrl() {
        return this.latestVersionUrl;
    }

    /**
     * An object indicating the status of the specification document.
     * @return 
     */
    public DocumentStatus getStatus() {
        return this.status;
    }

    /**
     * The release date of the specification document.
     * @return 
     */
    public LocalDate getReleaseDate() {
        return this.releaseDate;
    }

   
    @Override
    public String toString() {
        return "Specification(url=" + this.getUrl() + ", latestVersionUrl=" + this.getLatestVersionUrl() + ", status=" + this.getStatus() + ", releaseDate=" + this.getReleaseDate() + ")";
    }

    private Specification(final URL url, final URL latestVersionUrl, final DocumentStatus status, final LocalDate releaseDate) {
        this.url = url;
        this.latestVersionUrl = latestVersionUrl;
        this.status = status;
        this.releaseDate = releaseDate;
    }
}
